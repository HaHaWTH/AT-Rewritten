/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */
import java.text.SimpleDateFormat
import java.util.Date

plugins {
    id("java-library")
    id("maven-publish")
    id("com.github.johnrengelman.shadow") version "7.1.2"
}

repositories {
    mavenCentral()

    maven {
        name = "Spigot"
        url = uri("https://hub.spigotmc.org/nexus/content/repositories/snapshots/")
    }

    maven {
        name = "Paper and PaperLib"
        url = uri("https://papermc.io/repo/repository/maven-public/")
    }

    maven {
        name = "Vault"
        url = uri("https://repo.codemc.io/repository/maven-public/")
    }

    maven {
        name = "WorldBorder and Chunky"
        url = uri("https://jitpack.io")
    }

    maven {
        name = "ConfigurationMaster"
        url = uri("https://ci.pluginwiki.us/plugin/repository/everything/")
    }

    maven {
        name = "Essentials"
        url = uri("https://repo.essentialsx.net/releases/")
    }

    maven {
        name = "Worldguard"
        url = uri("https://maven.enginehub.org/repo/")
    }

    maven {
        name = "Geyser"
        url = uri("https://repo.opencollab.dev/maven-snapshots/")
    }

    maven {
        name = "authlib maybe"
        url = uri("https://libraries.minecraft.net/")
    }

    maven {
        name = "Adventure"
        url = uri("https://repo.maven.apache.org/maven2/")
    }

    maven {
        name = "Squaremap"
        url = uri("https://repo.jpenilla.xyz/snapshots/")
    }

    maven {
        name = "Dynmap"
        url = uri("https://repo.mikeprimm.com/")
    }
}

dependencies {
    implementation("io.papermc:paperlib:1.0.7")
    implementation("net.kyori:adventure-nbt:4.11.0")
    implementation("net.kyori:examination-api:1.3.0")
    implementation("com.github.thatsmusic99:ConfigurationMaster-API:v2.0.0-BETA-3")
    implementation("org.jetbrains:annotations:13.0")
    compileOnly("net.milkbowl.vault:VaultAPI:1.7")
    compileOnly("net.ess3:EssentialsX:2.18.2")
    compileOnly("net.ess3:EssentialsXSpawn:2.16.1")
    compileOnly("org.spigotmc:spigot-api:1.19.2-R0.1-SNAPSHOT")
    compileOnly("com.github.PryPurity:WorldBorder:v2.1.2")
    compileOnly("com.github.pop4959:ChunkyBorder:52034550ef")
    compileOnly("com.mojang:authlib:2.3.31")
    compileOnly("org.geysermc.floodgate:api:2.1.0-SNAPSHOT")
    compileOnly("com.github.angeschossen:LandsAPI:6.0.2")
    compileOnly("com.github.TechFortress:GriefPrevention:16.18")
    compileOnly("xyz.jpenilla:squaremap-api:1.1.3")
    compileOnly("us.dynmap:dynmap-api:3.4")
    compileOnly("us.dynmap:DynmapCoreAPI:3.4")
    compileOnly("com.sk89q.worldguard:worldguard-bukkit:7.0.7")
    // https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
    compileOnly("com.googlecode.json-simple:json-simple:1.1.1")
}

group = "io.github.niestrat99"
version = "5.6.4"

publishing {
    publications.create<MavenPublication>("maven") {
        from(components["java"])
    }
}

tasks.withType<JavaCompile> {
    options.encoding = "UTF-8"
}

tasks.withType<ProcessResources> {
    val currentDate = SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss'Z'").format(Date())
    inputs.property("version", project.version)
    inputs.property("timestamp", currentDate)

    filesMatching("plugin.yml") {
        expand(mutableMapOf("version" to project.version))
    }

    filesMatching("update.properties") {
        expand(mutableMapOf("timestamp" to currentDate))
    }
}

java {
    toolchain.languageVersion.set(JavaLanguageVersion.of(16))
}

description = "AdvancedTeleport-Bukkit"
